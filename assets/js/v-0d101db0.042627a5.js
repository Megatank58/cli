"use strict";(self.webpackChunksapphire_cli_guide=self.webpackChunksapphire_cli_guide||[]).push([[215],{121:(e,n,s)=>{s.r(n),s.d(n,{data:()=>a});const a={key:"v-0d101db0",path:"/guide/custom-templates.html",title:"Create custom component templates",lang:"en-US",frontmatter:{title:"Create custom component templates",desc:"Learn to create and use custom component templates"},excerpt:"",headers:[{level:2,title:"Enable custom component templates",slug:"enable-custom-component-templates",children:[]},{level:2,title:"Create a template",slug:"create-a-template",children:[]}],filePathRelative:"guide/custom-templates.md",git:{updatedTime:1633898821e3,contributors:[{name:"Enes Genç",email:"enesgenc4661@gmail.com",commits:1}]}}},145:(e,n,s)=>{s.r(n),s.d(n,{default:()=>y});var a=s(252),t=s(577);const l=(0,a._)("h1",{id:"create-custom-component-templates",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#create-custom-component-templates","aria-hidden":"true"},"#"),(0,a.Uk)(" Create custom component templates")],-1),o=(0,a._)("h2",{id:"enable-custom-component-templates",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#enable-custom-component-templates","aria-hidden":"true"},"#"),(0,a.Uk)(" Enable custom component templates")],-1),r=(0,a._)("div",{class:"language-json ext-json line-numbers-mode"},[(0,a._)("pre",{class:"language-json"},[(0,a._)("code",null,[(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token property"},'"projectLanguage"'),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"ts"'),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token property"},'"locations"'),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token property"},'"base"'),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"src"'),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token property"},'"arguments"'),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"arguments"'),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token property"},'"commands"'),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"commands"'),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token property"},'"listeners"'),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"listeners"'),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token property"},'"preconditions"'),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"preconditions"'),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token punctuation"},"}"),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token property"},'"customFileTemplates"'),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token property"},'"enabled"'),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token boolean"},"true"),(0,a._)("span",{class:"token punctuation"},","),(0,a.Uk)("\n    "),(0,a._)("span",{class:"token property"},'"location"'),(0,a._)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"templates"'),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token punctuation"},"}"),(0,a.Uk)("\n"),(0,a._)("span",{class:"token punctuation"},"}"),(0,a.Uk)("\n")])]),(0,a._)("div",{class:"highlight-lines"},[(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("div",{class:"highlight-line"}," "),(0,a._)("div",{class:"highlight-line"}," "),(0,a._)("div",{class:"highlight-line"}," "),(0,a._)("div",{class:"highlight-line"}," "),(0,a._)("br")]),(0,a._)("div",{class:"line-numbers"},[(0,a._)("span",{class:"line-number"},"1"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"2"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"3"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"4"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"5"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"6"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"7"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"8"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"9"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"10"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"11"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"12"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"13"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"14"),(0,a._)("br")])],-1),c=(0,a._)("div",{class:"language-yaml ext-yml line-numbers-mode"},[(0,a._)("pre",{class:"language-yaml"},[(0,a._)("code",null,[(0,a._)("span",{class:"token key atrule"},"projectLanguage"),(0,a._)("span",{class:"token punctuation"},":"),(0,a.Uk)(" ts\n"),(0,a._)("span",{class:"token key atrule"},"locations"),(0,a._)("span",{class:"token punctuation"},":"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token key atrule"},"base"),(0,a._)("span",{class:"token punctuation"},":"),(0,a.Uk)(" src\n  "),(0,a._)("span",{class:"token key atrule"},"arguments"),(0,a._)("span",{class:"token punctuation"},":"),(0,a.Uk)(" arguments\n  "),(0,a._)("span",{class:"token key atrule"},"commands"),(0,a._)("span",{class:"token punctuation"},":"),(0,a.Uk)(" commands\n  "),(0,a._)("span",{class:"token key atrule"},"listeners"),(0,a._)("span",{class:"token punctuation"},":"),(0,a.Uk)(" listeners\n  "),(0,a._)("span",{class:"token key atrule"},"preconditions"),(0,a._)("span",{class:"token punctuation"},":"),(0,a.Uk)(" preconditions\n"),(0,a._)("span",{class:"token key atrule"},"customFileTemplates"),(0,a._)("span",{class:"token punctuation"},":"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token key atrule"},"enabled"),(0,a._)("span",{class:"token punctuation"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token boolean important"},"true"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"token key atrule"},"location"),(0,a._)("span",{class:"token punctuation"},":"),(0,a.Uk)(),(0,a._)("span",{class:"token string"},'"templates"'),(0,a.Uk)("\n")])]),(0,a._)("div",{class:"highlight-lines"},[(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("br"),(0,a._)("div",{class:"highlight-line"}," "),(0,a._)("div",{class:"highlight-line"}," "),(0,a._)("div",{class:"highlight-line"}," ")]),(0,a._)("div",{class:"line-numbers"},[(0,a._)("span",{class:"line-number"},"1"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"2"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"3"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"4"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"5"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"6"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"7"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"8"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"9"),(0,a._)("br"),(0,a._)("span",{class:"line-number"},"10"),(0,a._)("br")])],-1),p=(0,a.uE)('<ul><li><strong>customFileTemplates.enabled</strong>: Enables/disables custom component templates</li><li><strong>customFileTemplates.location</strong>: The location of your templates</li></ul><h2 id="create-a-template" tabindex="-1"><a class="header-anchor" href="#create-a-template" aria-hidden="true">#</a> Create a template</h2><ul><li>Create a file with a name like this in your custom template directory: <code>&lt;templateName&gt;.&lt;language&gt;.sapphire</code> (e.g <code>command.ts.sapphire</code>). If you make its name same as one of the default templates, your template will override the default one.</li><li>Template&#39;s have 2 parts, config and the template, separated with <code>---</code>.</li><li>We first need to type the config:</li></ul><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n\t<span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;commands&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>category</code> is the category of that template, CLI uses it to know where to create the component by finding that category&#39;s location from the <code>locations</code> field in your <code>.sapphirerc</code> file. You can create your own categories. Default categories are: <code>commands</code>, <code>listeners</code>, <code>arguments</code>, <code>preconditions</code>. This example uses the <code>commands</code> category.</p><ul><li>Now we add the separator.</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{\n  &quot;category&quot;: &quot;commands&quot;\n}\n---\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>And the last part, we add the template.</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{\n  &quot;category&quot;: &quot;commands&quot;\n}\n---\nimport { ApplyOptions } from &#39;@sapphire/decorators&#39;;\nimport { MyExtendedCommand } from &#39;./somewhere&#39;;\nimport { Message } from &#39;discord.js&#39;;\n\n@ApplyOptions&lt;MyExtendedCommand.Options&gt;({\n\tdescription: &#39;A basic command&#39;\n})\nexport class {{name}}Command extends MyExtendedCommand {\n\tpublic async run(message: Message) {\n\t\treturn message.channel.send(&#39;Hello world!&#39;);\n\t}\n}\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>',9),i=(0,a.Uk)("If you look at the name of the class, you will see it includes "),u=(0,a.Uk)(", this is the component's name and it is replaced with that name when creating the component. For example: if we created this component with the name "),m=(0,a._)("code",null,"HelloWorld",-1),d=(0,a.Uk)(", the name of the exported class would be "),_=(0,a._)("code",null,"HelloWorldCommand",-1),b=(0,a.Uk)(". It is not required but if you need it, this is how it's done."),k=(0,a._)("ul",null,[(0,a._)("li",null,"And now you can create component with your template")],-1),g=(0,a._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,a._)("pre",{class:"language-text"},[(0,a._)("code",null,"sapphire generate <component> <name>\n")]),(0,a._)("div",{class:"line-numbers"},[(0,a._)("span",{class:"line-number"},"1"),(0,a._)("br")])],-1),h={},y=(0,s(744).Z)(h,[["render",function(e,n){const s=(0,a.up)("CodeGroupItem"),h=(0,a.up)("CodeGroup");return(0,a.wg)(),(0,a.iD)(a.HY,null,[l,o,(0,a.Wm)(h,null,{default:(0,a.w5)((()=>[(0,a.Wm)(s,{title:"JSON"},{default:(0,a.w5)((()=>[r])),_:1}),(0,a.Wm)(s,{title:"YAML"},{default:(0,a.w5)((()=>[c])),_:1})])),_:1}),p,(0,a._)("p",null,[i,(0,a._)("code",null,(0,t.zw)(e.name),1),u,m,d,_,b]),k,g],64)}]])},744:(e,n)=>{n.Z=(e,n)=>{for(const[s,a]of n)e[s]=a;return e}}}]);